openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API documentation with user management endpoints

paths:
  /users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: john@example.com
                password:
                  type: string
                  format: password
                  example: secret123
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Bad Request - Invalid input
        '409':
          description: Conflict - User already exists

  /users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Numeric ID of the user to get
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: John Doe
                  email:
                    type: string
                    format: email
                    example: john@example.com
                  profile_image_id:
                    type: string
                    example: abc123imageid
                  birth_date:
                    type: string
                    format: date
                    example: 1990-01-01
                  phone_number:
                    type: string
                    example: "+1234567890"
                  gender:
                    type: string
                    enum:
                      - male
                      - female
                      - other
                    example: male
        '404':
          description: User not found

    put:
      summary: Update user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Numeric ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: john@example.com
                profile_image_id:
                  type: string
                  example: abc123imageid
                birth_date:
                  type: string
                  format: date
                  example: 1990-01-01
                phone_number:
                  type: string
                  example: "+1234567890"
                gender:
                  type: string
                  enum:
                    - male
                    - female
                    - other
                  example: male
      responses:
        '200':
          description: User updated successfully
        '400':
          description: Bad Request - Invalid input
        '404':
          description: User not found